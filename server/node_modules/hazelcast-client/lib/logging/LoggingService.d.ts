export declare enum LogLevel {
    ERROR = 0,
    WARN = 1,
    INFO = 2,
    DEBUG = 3,
    TRACE = 4,
}
export interface ILogger {
    log(level: LogLevel, className: string, message: string, furtherInfo: any): void;
}
export declare class LoggingService {
    private static loggingService;
    logger: ILogger;
    constructor(externalLogger?: ILogger);
    static getLoggingService(): LoggingService;
    static initialize(loggerModule?: string | ILogger): void;
    log(level: LogLevel, className: string, message: string, furtherInfo: any): void;
    error(className: string, message: string, furtherInfo?: any): void;
    warn(className: string, message: string, furtherInfo?: any): void;
    info(className: string, message: string, furtherInfo?: any): void;
    debug(className: string, message: string, furtherInfo?: any): void;
    trace(className: string, message: string, furtherInfo?: any): void;
}

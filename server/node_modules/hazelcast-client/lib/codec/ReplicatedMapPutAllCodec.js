"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ClientMessage = require("../ClientMessage");
var BitsUtil_1 = require("../BitsUtil");
var ReplicatedMapMessageType_1 = require("./ReplicatedMapMessageType");
var REQUEST_TYPE = ReplicatedMapMessageType_1.ReplicatedMapMessageType.REPLICATEDMAP_PUTALL;
var RESPONSE_TYPE = 100;
var RETRYABLE = false;
var ReplicatedMapPutAllCodec = (function () {
    function ReplicatedMapPutAllCodec() {
    }
    ReplicatedMapPutAllCodec.calculateSize = function (name, entries) {
        var dataSize = 0;
        dataSize += BitsUtil_1.BitsUtil.calculateSizeString(name);
        dataSize += BitsUtil_1.BitsUtil.INT_SIZE_IN_BYTES;
        entries.forEach(function (entriesItem) {
            var key = entriesItem[0];
            var val = entriesItem[1];
            dataSize += BitsUtil_1.BitsUtil.calculateSizeData(key);
            dataSize += BitsUtil_1.BitsUtil.calculateSizeData(val);
        });
        return dataSize;
    };
    ReplicatedMapPutAllCodec.encodeRequest = function (name, entries) {
        var clientMessage = ClientMessage.newClientMessage(this.calculateSize(name, entries));
        clientMessage.setMessageType(REQUEST_TYPE);
        clientMessage.setRetryable(RETRYABLE);
        clientMessage.appendString(name);
        clientMessage.appendInt32(entries.length);
        entries.forEach(function (entriesItem) {
            var key = entriesItem[0];
            var val = entriesItem[1];
            clientMessage.appendData(key);
            clientMessage.appendData(val);
        });
        clientMessage.updateFrameLength();
        return clientMessage;
    };
    return ReplicatedMapPutAllCodec;
}());
exports.ReplicatedMapPutAllCodec = ReplicatedMapPutAllCodec;
//# sourceMappingURL=ReplicatedMapPutAllCodec.js.map
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ClientMessage = require("../ClientMessage");
var BitsUtil_1 = require("../BitsUtil");
var LockMessageType_1 = require("./LockMessageType");
var REQUEST_TYPE = LockMessageType_1.LockMessageType.LOCK_LOCK;
var RESPONSE_TYPE = 100;
var RETRYABLE = true;
var LockLockCodec = (function () {
    function LockLockCodec() {
    }
    LockLockCodec.calculateSize = function (name, leaseTime, threadId, referenceId) {
        var dataSize = 0;
        dataSize += BitsUtil_1.BitsUtil.calculateSizeString(name);
        dataSize += BitsUtil_1.BitsUtil.LONG_SIZE_IN_BYTES;
        dataSize += BitsUtil_1.BitsUtil.LONG_SIZE_IN_BYTES;
        dataSize += BitsUtil_1.BitsUtil.LONG_SIZE_IN_BYTES;
        return dataSize;
    };
    LockLockCodec.encodeRequest = function (name, leaseTime, threadId, referenceId) {
        var clientMessage = ClientMessage.newClientMessage(this.calculateSize(name, leaseTime, threadId, referenceId));
        clientMessage.setMessageType(REQUEST_TYPE);
        clientMessage.setRetryable(RETRYABLE);
        clientMessage.appendString(name);
        clientMessage.appendLong(leaseTime);
        clientMessage.appendLong(threadId);
        clientMessage.appendLong(referenceId);
        clientMessage.updateFrameLength();
        return clientMessage;
    };
    return LockLockCodec;
}());
exports.LockLockCodec = LockLockCodec;
//# sourceMappingURL=LockLockCodec.js.map
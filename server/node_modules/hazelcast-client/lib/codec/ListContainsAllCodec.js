"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ClientMessage = require("../ClientMessage");
var BitsUtil_1 = require("../BitsUtil");
var ListMessageType_1 = require("./ListMessageType");
var REQUEST_TYPE = ListMessageType_1.ListMessageType.LIST_CONTAINSALL;
var RESPONSE_TYPE = 101;
var RETRYABLE = true;
var ListContainsAllCodec = (function () {
    function ListContainsAllCodec() {
    }
    ListContainsAllCodec.calculateSize = function (name, values) {
        var dataSize = 0;
        dataSize += BitsUtil_1.BitsUtil.calculateSizeString(name);
        dataSize += BitsUtil_1.BitsUtil.INT_SIZE_IN_BYTES;
        values.forEach(function (valuesItem) {
            dataSize += BitsUtil_1.BitsUtil.calculateSizeData(valuesItem);
        });
        return dataSize;
    };
    ListContainsAllCodec.encodeRequest = function (name, values) {
        var clientMessage = ClientMessage.newClientMessage(this.calculateSize(name, values));
        clientMessage.setMessageType(REQUEST_TYPE);
        clientMessage.setRetryable(RETRYABLE);
        clientMessage.appendString(name);
        clientMessage.appendInt32(values.length);
        values.forEach(function (valuesItem) {
            clientMessage.appendData(valuesItem);
        });
        clientMessage.updateFrameLength();
        return clientMessage;
    };
    ListContainsAllCodec.decodeResponse = function (clientMessage, toObjectFunction) {
        if (toObjectFunction === void 0) { toObjectFunction = null; }
        var parameters = { 'response': null };
        parameters['response'] = clientMessage.readBoolean();
        return parameters;
    };
    return ListContainsAllCodec;
}());
exports.ListContainsAllCodec = ListContainsAllCodec;
//# sourceMappingURL=ListContainsAllCodec.js.map
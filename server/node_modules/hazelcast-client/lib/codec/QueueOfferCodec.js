"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ClientMessage = require("../ClientMessage");
var BitsUtil_1 = require("../BitsUtil");
var QueueMessageType_1 = require("./QueueMessageType");
var REQUEST_TYPE = QueueMessageType_1.QueueMessageType.QUEUE_OFFER;
var RESPONSE_TYPE = 101;
var RETRYABLE = false;
var QueueOfferCodec = (function () {
    function QueueOfferCodec() {
    }
    QueueOfferCodec.calculateSize = function (name, value, timeoutMillis) {
        var dataSize = 0;
        dataSize += BitsUtil_1.BitsUtil.calculateSizeString(name);
        dataSize += BitsUtil_1.BitsUtil.calculateSizeData(value);
        dataSize += BitsUtil_1.BitsUtil.LONG_SIZE_IN_BYTES;
        return dataSize;
    };
    QueueOfferCodec.encodeRequest = function (name, value, timeoutMillis) {
        var clientMessage = ClientMessage.newClientMessage(this.calculateSize(name, value, timeoutMillis));
        clientMessage.setMessageType(REQUEST_TYPE);
        clientMessage.setRetryable(RETRYABLE);
        clientMessage.appendString(name);
        clientMessage.appendData(value);
        clientMessage.appendLong(timeoutMillis);
        clientMessage.updateFrameLength();
        return clientMessage;
    };
    QueueOfferCodec.decodeResponse = function (clientMessage, toObjectFunction) {
        if (toObjectFunction === void 0) { toObjectFunction = null; }
        var parameters = { 'response': null };
        parameters['response'] = clientMessage.readBoolean();
        return parameters;
    };
    return QueueOfferCodec;
}());
exports.QueueOfferCodec = QueueOfferCodec;
//# sourceMappingURL=QueueOfferCodec.js.map
import { TopicMessageListener } from './TopicMessageListener';
import { IRingbuffer } from '../IRingbuffer';
import { RawTopicMessage } from './RawTopicMessage';
import { SerializationService } from '../../serialization/SerializationService';
import { ReliableTopicProxy } from './ReliableTopicProxy';
export declare class ReliableTopicListenerRunner<E> {
    private listener;
    private ringbuffer;
    private batchSize;
    sequenceNumber: number;
    private serializationService;
    private cancelled;
    private loggingService;
    private proxy;
    private listenerId;
    constructor(listenerId: string, listener: TopicMessageListener<E>, ringbuffer: IRingbuffer<RawTopicMessage>, batchSize: number, serializationService: SerializationService, proxy: ReliableTopicProxy<E>);
    next(): void;
    cancel(): void;
}

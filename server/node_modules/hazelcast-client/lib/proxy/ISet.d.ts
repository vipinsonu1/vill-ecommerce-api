/// <reference types="bluebird" />
import * as Promise from 'bluebird';
import { DistributedObject } from '../DistributedObject';
import { ItemListener } from '../core/ItemListener';
export interface ISet<E> extends DistributedObject {
    add(entry: E): Promise<boolean>;
    addAll(items: E[]): Promise<boolean>;
    getAll(): Promise<E[]>;
    clear(): Promise<void>;
    contains(entry: E): Promise<boolean>;
    containsAll(items: E[]): Promise<boolean>;
    isEmpty(): Promise<boolean>;
    remove(entry: E): Promise<boolean>;
    removeAll(items: E[]): Promise<boolean>;
    retainAll(items: E[]): Promise<boolean>;
    size(): Promise<number>;
    addItemListener(listener: ItemListener<E>, includeValue: boolean): Promise<string>;
    removeItemListener(registrationId: string): Promise<boolean>;
}

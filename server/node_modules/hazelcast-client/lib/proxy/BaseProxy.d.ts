/// <reference types="bluebird" />
import { Data } from '../serialization/Data';
import * as Promise from 'bluebird';
import HazelcastClient from '../HazelcastClient';
export declare class BaseProxy {
    protected client: HazelcastClient;
    protected name: string;
    protected serviceName: string;
    constructor(client: HazelcastClient, serviceName: string, name: string);
    private createPromise<T>(codec, promise);
    protected encodeInvokeOnKey<T>(codec: any, partitionKey: any, ...codecArguments: any[]): Promise<T>;
    protected encodeInvokeOnRandomTarget<T>(codec: any, ...codecArguments: any[]): Promise<T>;
    protected encodeInvokeOnPartition<T>(codec: any, partitionId: number, ...codecArguments: any[]): Promise<T>;
    protected toData(object: any): Data;
    protected toObject(data: Data): any;
    getPartitionKey(): string;
    getName(): string;
    getServiceName(): string;
    destroy(): Promise<void>;
}

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var events_1 = require("events");
exports.LifecycleEvent = {
    name: 'lifecycleEvent',
    starting: 'starting',
    started: 'started',
    shuttingDown: 'shuttingDown',
    shutdown: 'shutdown'
};
var LifecycleService = (function (_super) {
    __extends(LifecycleService, _super);
    function LifecycleService(client) {
        var _this = _super.call(this) || this;
        _this.setMaxListeners(0);
        _this.client = client;
        var listeners = [];
        try {
            listeners = client.getConfig().listeners.lifecycle;
            listeners.forEach(function (listener) {
                _this.on(exports.LifecycleEvent.name, listener);
            });
        }
        catch (err) {
        }
        _this.emit(exports.LifecycleEvent.name, exports.LifecycleEvent.starting);
        return _this;
    }
    LifecycleService.prototype.emitLifecycleEvent = function (state) {
        if (!exports.LifecycleEvent.hasOwnProperty(state)) {
            throw new Error(state + ' is not a valid lifecycle event');
        }
        if (state === exports.LifecycleEvent.started) {
            this.active = true;
        }
        else if (state === exports.LifecycleEvent.shuttingDown) {
            this.active = false;
        }
        this.emit(exports.LifecycleEvent.name, state);
    };
    LifecycleService.prototype.isRunning = function () {
        return this.active;
    };
    return LifecycleService;
}(events_1.EventEmitter));
exports.LifecycleService = LifecycleService;
//# sourceMappingURL=LifecycleService.js.map
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KeyStateMarker_1 = require("./KeyStateMarker");
var InvalidationAwareWrapper = (function () {
    function InvalidationAwareWrapper(nearCache, markerCount) {
        this.nearCache = nearCache;
        this.keyStateMarker = new KeyStateMarker_1.KeyStateMarkerImpl(markerCount);
    }
    InvalidationAwareWrapper.asInvalidationAware = function (nearCache, markerCount) {
        return new InvalidationAwareWrapper(nearCache, markerCount);
    };
    InvalidationAwareWrapper.prototype.put = function (key, value) {
        return this.nearCache.put(key, value);
    };
    InvalidationAwareWrapper.prototype.get = function (key) {
        return this.nearCache.get(key);
    };
    InvalidationAwareWrapper.prototype.invalidate = function (key) {
        this.keyStateMarker.removeIfMarked(key);
        return this.nearCache.invalidate(key);
    };
    InvalidationAwareWrapper.prototype.clear = function () {
        this.keyStateMarker.unmarkAllForcibly();
        return this.nearCache.clear();
    };
    InvalidationAwareWrapper.prototype.getStatistics = function () {
        return this.nearCache.getStatistics();
    };
    InvalidationAwareWrapper.prototype.isInvalidatedOnChange = function () {
        return this.nearCache.isInvalidatedOnChange();
    };
    InvalidationAwareWrapper.prototype.getKeyStateMarker = function () {
        return this.keyStateMarker;
    };
    return InvalidationAwareWrapper;
}());
exports.InvalidationAwareWrapper = InvalidationAwareWrapper;
//# sourceMappingURL=InvalidationAwareWrapper.js.map